{"version":3,"file":"static/js/712.058f5af0.chunk.js","mappings":"0KA2FA,QAlFA,WACE,MAAOA,EAASC,IAAcC,EAAAA,EAAAA,WAAkB,IACzCC,EAAWC,IAAgBF,EAAAA,EAAAA,WAAkB,IAC7CG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAiB,KAErC,SACJK,EAAQ,aACRC,EACAC,WAAW,OAAEC,GAAQ,MACrBC,IACEC,EAAAA,EAAAA,MAUJ,OACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0FAAyFF,SAAA,EACtGF,EAAAA,EAAAA,KAAA,OAAKK,IAAI,cAAcD,UAAU,cAAcE,IAAI,+BACjDhB,GAkBAa,EAAAA,EAAAA,MAAAF,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAII,UAAU,0BAAyBF,SAAC,kBACxCC,EAAAA,EAAAA,MAAA,QACEI,aAAa,MACbH,UAAU,QACVI,SAAUb,GA/BtB,SAAqBc,GACnBrB,GAAW,EACb,IA8BYsB,YAAU,EAAAR,SAAA,EAEVC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sBAAqBF,SAAA,EAClCC,EAAAA,EAAAA,MAAA,SAAOQ,QAAQ,QAAOT,SAAA,CAAC,UACfF,EAAAA,EAAAA,KAAA,QAAMI,UAAU,WAAUF,SAAC,UAEnCF,EAAAA,EAAAA,KAAA,SACEY,KAAK,QACLR,UAAU,8BACVS,YAAY,2BACZC,GAAG,QACHC,UAAQ,KACJrB,EAAS,QAAS,CAAEqB,UAAU,MAEnClB,EAAOL,QAASQ,EAAAA,EAAAA,KAAA,KAAGI,UAAU,sBAAqBF,SAAC,0BAEtDF,EAAAA,EAAAA,KAAA,UACEI,UAAU,6BACVQ,KAAK,SACLI,SAAU7B,EAAQe,SACnB,mBAIHF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,iBAAgBF,UAC7BF,EAAAA,EAAAA,KAACiB,EAAAA,GAAO,CAACC,GAAG,cAAahB,SAAC,wBAhD9BC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaF,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,MAAII,UAAU,cAAaF,SAAC,8BAC5BF,EAAAA,EAAAA,KAAA,KAAGI,UAAU,gBAAeF,SAAC,8EAI7BF,EAAAA,EAAAA,KAACiB,EAAAA,GAAO,CAACC,GAAG,cAAahB,UACvBF,EAAAA,EAAAA,KAAA,UAAQI,UAAU,mBAAkBF,SAAC,qBAEvCC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBF,SAAA,CAAC,6BACR,KACtBF,EAAAA,EAAAA,KAAA,QAAMI,UAAU,YAAYe,QAASA,IAAM5B,GAAa,GAAMW,SAAC,qBA4C7E,C","sources":["pages/auth/signUpSuccess/SignUpSuccess.tsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./SignUpSuccess.css\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\ntype FormValues = {\r\n  email: string;\r\n};\r\n\r\nfunction SignUpSuccess() {\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [emailSend, setEmailSend] = useState<boolean>(false);\r\n  const [email, setEmail] = useState<string>(\"\");\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    reset\r\n  } = useForm<FormValues>();\r\n  \r\n  function handleInputChange(e: any) {\r\n    setEmail(e.target.value);\r\n  }\r\n\r\n  function resendEmail(data: FormValues) {\r\n    setLoading(true);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex justify-content-center align-items-center signup-success h-100 p-3 p-sm-4 p-xl-5\">\r\n        <img alt=\"success-gif\" className=\"success-img\" src=\"/assets/images/success.gif\" />\r\n        {!emailSend ? (\r\n          <div className=\"text-center\">\r\n            <h1 className=\"gilroy-bold\">Registered Successfully!</h1>\r\n            <p className=\"gilroy-medium\">\r\n              Account Activation Link has been sent to the email address you\r\n              provided.\r\n            </p>\r\n            <NavLink to=\"/auth/login\">\r\n              <button className=\"btn-primary w-50\">Back to Login</button>\r\n            </NavLink>\r\n            <div className=\"auth-info mt-3\">\r\n              Didnâ€™t get the email?{\" \"}\r\n              <span className=\"c-pointer\" onClick={() => setEmailSend(true)}>\r\n                Resend\r\n              </span>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <h1 className=\"gilroy-bold text-center\">Resend Email</h1>\r\n            <form\r\n              autoComplete=\"off\"\r\n              className=\"w-100\"\r\n              onSubmit={handleSubmit(resendEmail)}\r\n              noValidate\r\n            >\r\n              <div className=\"relative py-1 w-100\">\r\n                <label htmlFor=\"email\">\r\n                  Email <span className=\"required\">*</span>\r\n                </label>\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"w-100 p-2 mt-1 form-control\"\r\n                  placeholder=\"Enter your email address\"\r\n                  id=\"email\"\r\n                  required\r\n                  {...register(\"email\", { required: true })}\r\n                />\r\n                {errors.email && <p className=\"required-error mb-0\">Email is required</p>}\r\n              </div>\r\n              <button\r\n                className=\"btn btn-primary w-100 mt-2\"\r\n                type=\"submit\"\r\n                disabled={loading}\r\n              >\r\n                Send Email\r\n              </button>\r\n            </form>\r\n            <div className=\"auth-info mt-3\">\r\n              <NavLink to=\"/auth/login\">Back to Login</NavLink>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SignUpSuccess;\r\n"],"names":["loading","setLoading","useState","emailSend","setEmailSend","email","setEmail","register","handleSubmit","formState","errors","reset","useForm","_jsx","_Fragment","children","_jsxs","className","alt","src","autoComplete","onSubmit","data","noValidate","htmlFor","type","placeholder","id","required","disabled","NavLink","to","onClick"],"sourceRoot":""}